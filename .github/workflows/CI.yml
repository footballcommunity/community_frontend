name: CI with nginx
# 동작 조건
on:
  push:
    branches: [ "master" ]

jobs:
  # 프로젝트 빌드
  build-docker-image:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      # 3. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/community_service_frontend .
  
      # 4. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      # 5. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/community_service_frontend
# 푸시한 이미지를 ec2에서 풀 & 실행 
  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted
    steps:
      # 1. 이미지 풀
      - name: docker pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/community_service_frontend
      
      # 2. 기존의 컨테이너를 중지
      - name: docker stop container
        run: sudo docker stop community_service_frontend 2>/dev/null || true
  
      # 3. 최신 이미지를 실행시킵니다
      - name: docker run new container
        run: sudo docker run --name community_service_frontend --rm -d -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/community_service_frontend

      # 4. https 인증서 복사
      - name : ssl cert 
        run : sudo docker cp /etc/letsencrypt /etc/letsencrypt
      # 5. 미사용 이미지를 정리
      - name: delete old docker image
        run: sudo docker system prune -f
